(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{240:function(t,a,s){"use strict";s.r(a);var n=s(19),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("blockquote",[s("p",[t._v("随着计算机革命的发展，“不安全”的编程方式已逐渐成为编程代价高昂的主因之一。")])]),t._v(" "),s("h2",{attrs:{id:"_5-1-用构造器确保初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-用构造器确保初始化"}},[t._v("#")]),t._v(" 5.1 用构造器确保初始化")]),t._v(" "),s("p",[t._v("构造器采用与类相同的名称，没有任何返回值。")]),t._v(" "),s("p",[t._v("创建对象时，将会为对象分配存储空间，并调用相应的构造器。不接受任何参数的构造器叫做"),s("strong",[t._v("默认构造器（无参构造器）")]),t._v("。如果创建了自己的构造器，编译器将不会允许其它方式创建对象。")]),t._v(" "),s("h2",{attrs:{id:"_5-2-方法重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-方法重载"}},[t._v("#")]),t._v(" 5.2 方法重载")]),t._v(" "),s("h3",{attrs:{id:"_5-2-1-区分重载方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-区分重载方法"}},[t._v("#")]),t._v(" 5.2.1 区分重载方法")]),t._v(" "),s("p",[t._v("每个重载的方法都必须有一个独一无二的参数列表。")]),t._v(" "),s("p",[t._v("根据方法的返回值来区分重载方法是行不通的。因为有些时候你可能会调用方法而忽略返回值。")]),t._v(" "),s("h2",{attrs:{id:"_5-3-默认构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-默认构造器"}},[t._v("#")]),t._v(" 5.3 默认构造器")]),t._v(" "),s("p",[t._v("如果类中没有构造器，编译器会自动创建一个默认构造器；如果你创建了一个构造器（无论是否有参数），编译器就不会帮你自动创建默认构造器")]),t._v(" "),s("h2",{attrs:{id:"_5-4-this-关键字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-this-关键字"}},[t._v("#")]),t._v(" 5.4 this 关键字")]),t._v(" "),s("p",[s("code",[t._v("this")]),t._v("关键字只能在方法内部使用，表示对“调用方法那个对象的引用”。")]),t._v(" "),s("h3",{attrs:{id:"_5-4-1-在构造器中调用构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-在构造器中调用构造器"}},[t._v("#")]),t._v(" 5.4.1 在构造器中调用构造器")]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("this")]),t._v("在构造器中调用构造器，但最多只能调用一个，且必须将构造器调用置于起始处。")]),t._v(" "),s("p",[t._v("除构造器外，编译器禁止在任何其它方法中调用构造器。")]),t._v(" "),s("h3",{attrs:{id:"_5-4-2-static-的含义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-static-的含义"}},[t._v("#")]),t._v(" 5.4.2 static 的含义")]),t._v(" "),s("p",[s("code",[t._v("static")]),t._v("方法内部不能调用"),s("strong",[t._v("非静态方法")]),t._v("，反过来可以。")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("static")]),t._v("方法时不存在"),s("code",[t._v("this")]),t._v("。")]),t._v(" "),s("p",[t._v("可以在没有创建任何对象的前提下，通过类本身来调用"),s("code",[t._v("static")]),t._v("方法。")]),t._v(" "),s("h2",{attrs:{id:"_5-5-清理：终结处理和垃圾回收"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-清理：终结处理和垃圾回收"}},[t._v("#")]),t._v(" 5.5 清理：终结处理和垃圾回收")]),t._v(" "),s("p",[t._v("垃圾回收负责回收无用对象占据的内存资源，只知道释放经由"),s("code",[t._v("new")]),t._v("分配的内存。因此：")]),t._v(" "),s("ol",[s("li",[t._v("对象可能不被垃圾回收。")]),t._v(" "),s("li",[t._v("垃圾回收不等于析构。")]),t._v(" "),s("li",[t._v("垃圾回收只与内存有关。")])]),t._v(" "),s("p",[t._v("而通过其它方式为对象分配的内存却无法被垃圾回收器回收。")]),t._v(" "),s("p",[t._v("这种其它方式一般是可能在分配内存时采用了类似C语言中的做法，这种情况主要发生在使用本地方法下。本地方法是在Java中调用非Java代码的方式。在这些非Java代码中，也许会调用C的"),s("code",[t._v("malloc()")]),t._v("函数系列来分配存储空间，除非调用"),s("code",[t._v("free()")]),t._v("函数，否则存储空间无法释放。因此，需要在"),s("code",[t._v("finalize()")]),t._v("中用本地方法调用它。")]),t._v(" "),s("p",[t._v("这就是"),s("code",[t._v("finalize()")]),t._v("一般的使用场景，当然一般是用不到的。")]),t._v(" "),s("h3",{attrs:{id:"_5-5-2-你必须实施清理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-2-你必须实施清理"}},[t._v("#")]),t._v(" 5.5.2 你必须实施清理")]),t._v(" "),s("p",[t._v("垃圾回收器不能完全代替析构函数，而且绝对不能直接调用"),s("code",[t._v("finalize()")]),t._v("。如果希望进行释放存储空间之外的清理工作，还是得明确调用某个Java方法。这就等同于析构函数了，但是没有它方便。")]),t._v(" "),s("p",[t._v("记住，无论是垃圾回收还是终结，都不保证一定会发生。如果JVM并未面临内存耗尽的情形，它是不会浪费时间去执行垃圾回收以恢复内存的。")]),t._v(" "),s("h3",{attrs:{id:"_5-5-3-终结条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-3-终结条件"}},[t._v("#")]),t._v(" 5.5.3 终结条件")]),t._v(" "),s("p",[s("code",[t._v("finalize()")]),t._v("只能存在于程序员很难用到的一些晦涩用法。")]),t._v(" "),s("p",[t._v("例如：可以用它来判断对象是否达到可以被回收的状态。")]),t._v(" "),s("p",[s("code",[t._v("System.gc()")]),t._v("用于强制进行终结动作。")]),t._v(" "),s("h3",{attrs:{id:"_5-5-4-垃圾回收器如何工作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-4-垃圾回收器如何工作"}},[t._v("#")]),t._v(" 5.5.4 垃圾回收器如何工作")]),t._v(" "),s("p",[t._v("当创建了足够多的对象，内存资源将被耗尽时，垃圾回收器将会启动。当垃圾回收器工作时，将一面回收空间，一面使堆中的对象紧凑排列，这样堆指针就可以很容易移动到传送带的开始处，通过垃圾回收器对对象重新排列，实现了一种高速的，有无限空间可供分配的堆模型。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("停止-复制")]),t._v("模式。暂停程序运行，将所有存活的对象从一个堆复制到另一个堆。问题是，当没有什么垃圾产生时，也会将所有内存复制一遍。为避免这种情况，一些JVM会切换到"),s("strong",[t._v("标记-清扫")]),t._v("模式。")]),t._v(" "),s("li",[s("strong",[t._v("标记-清扫")]),t._v("模式。Sun公司早期版本的JVM使用这种做法。从堆栈和静态存储区出发，遍历所有的引用，进而找到所有存活的对象，给每个对象设一个标记。当全部标记工作完成时，开始清理，没有被标记的对象将被释放，不会发生任何复制动作。但是剩下的堆空间是不连续的。")]),t._v(" "),s("li",[s("strong",[t._v("分代")]),t._v("模式。垃圾回收器回收时往废弃的块里拷贝对象。每个块都用相应的"),s("strong",[t._v("代数")]),t._v("来记录它是否存活。如果在某处被引用，"),s("strong",[t._v("代数")]),t._v("增加。垃圾回收器定期清理时，大型对象不会被复制（代数增加），内含小型对象的那些快则被复制并整理。当对象稳定，垃圾回收器效率降低时，就会切换到"),s("strong",[t._v("标记-清扫")]),t._v("模式。")])]),t._v(" "),s("p",[t._v("这就是“自适应的，分代的，停止-复制，标记-清扫”式垃圾回收器。")]),t._v(" "),s("h2",{attrs:{id:"_5-6-成员初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-6-成员初始化"}},[t._v("#")]),t._v(" 5.6 成员初始化")]),t._v(" "),s("p",[t._v("类中的成员变量是基本类型，它们就会有一个默认初始值。对象引用默认为null，在实例化之前不能调用它。")]),t._v(" "),s("p",[t._v("局部变量必须要手动赋初值。")]),t._v(" "),s("h2",{attrs:{id:"_5-7-构造器初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-构造器初始化"}},[t._v("#")]),t._v(" 5.7 构造器初始化")]),t._v(" "),s("p",[t._v("自动初始化在构造器被调用之前发生。")]),t._v(" "),s("h3",{attrs:{id:"_5-7-1-初始化顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-1-初始化顺序"}},[t._v("#")]),t._v(" 5.7.1 初始化顺序")]),t._v(" "),s("p",[t._v("成员变量会首先初始化，即使变量散落在类的各处。")]),t._v(" "),s("h3",{attrs:{id:"_5-7-2-静态数据的初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-2-静态数据的初始化"}},[t._v("#")]),t._v(" 5.7.2 静态数据的初始化")]),t._v(" "),s("p",[t._v("无论创建多少个对象，静态数据都只占用一份存储区域。"),s("code",[t._v("static")]),t._v("关键字不能应用于局部变量，只能作用于域。")]),t._v(" "),s("p",[t._v("当第一次加载类时，类中的静态成员首先初始化（只会调用一次，当第二次创建类时，静态成员不会被再次初始化。）静态成员初始化后，非静态成员会初始化。然后执行构造器。")]),t._v(" "),s("p",[t._v("静态初始化只会在"),s("code",[t._v("Class")]),t._v("对象首次加载时进行一次。")]),t._v(" "),s("h3",{attrs:{id:"_5-7-3-显式的静态初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-3-显式的静态初始化"}},[t._v("#")]),t._v(" 5.7.3 显式的静态初始化")]),t._v(" "),s("p",[s("code",[t._v("static")]),t._v("静态代码块，初始化动作如同"),s("code",[t._v("static")]),t._v("成员变量，也只执行一次。")]),t._v(" "),s("h3",{attrs:{id:"_5-7-4-非静态实例初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-7-4-非静态实例初始化"}},[t._v("#")]),t._v(" 5.7.4 非静态实例初始化")]),t._v(" "),s("p",[t._v("非静态代码块，每次调用构造器时，都会在构造器之前执行。")]),t._v(" "),s("h2",{attrs:{id:"_5-8-数组初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-数组初始化"}},[t._v("#")]),t._v(" 5.8 数组初始化")]),t._v(" "),s("p",[t._v("C，C++ 中习惯使用"),s("code",[t._v("int a[];")]),t._v("，Java 中习惯使用"),s("code",[t._v("int[] a")]),t._v("来定义数组。")]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("{}")]),t._v("来对数组进行初始化，例如:")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("如果不确定初始化值，也可以使用"),s("code",[t._v("new")]),t._v("来创建，例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("它具有默认初始化值：0")]),t._v(" "),s("p",[t._v("如果创建了非基本类型的数据，那么它的默认值为"),s("code",[t._v("null")]),t._v("，例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("如果忘记创建"),s("code",[t._v("Integer")]),t._v("对象，那么在访问时就会"),s("strong",[t._v("空指针异常")]),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"_5-8-1-可变参数列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-8-1-可变参数列表"}},[t._v("#")]),t._v(" 5.8.1 可变参数列表")]),t._v(" "),s("p",[t._v("有了可变参数，就不用再显式的编写数组语法，当你指定参数时，编译器会自动填充数组。\n你获取的仍然是一个数组。例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printArray")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("可以将 0 个参数传递给可变参数。")]),t._v(" "),s("p",[t._v("可变参数使重载变得复杂，因为当传入参数为 0 个参数时，编译器并不知道你想要调用哪个。")]),t._v(" "),s("h2",{attrs:{id:"_5-9-枚举类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-9-枚举类型"}},[t._v("#")]),t._v(" 5.9 枚举类型")]),t._v(" "),s("p",[t._v("在你创建"),s("code",[t._v("enum")]),t._v("时，编辑器会自动添加一些有用的特性。例如：它会自动创建"),s("code",[t._v("toString()")]),t._v("方法，以便你可以方便显式某个"),s("code",[t._v("enum")]),t._v("实例的名字。")]),t._v(" "),s("p",[t._v("编译器还会创建"),s("code",[t._v("ordinal()")]),t._v("方法，用来表示某个特定"),s("code",[t._v("enum")]),t._v("常量的声明顺序.")]),t._v(" "),s("p",[t._v("以及"),s("code",[t._v("static values()")]),t._v("方法，用来按照"),s("code",[t._v("enum")]),t._v("常量的声明顺序，产生这些常量值构成的数组。例如：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spiciness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MILD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MEDIUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HOT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FLAMING\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnumOrder")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spiciness")]),t._v(" s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spiciness")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("values")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", ordinal "')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ordinal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* Output:\nNOT, ordinal 0\nMILD, ordinal 1\nMEDIUM, ordinal 2\nHOT, ordinal 3\nFLAMING, ordinal 4\n*/")]),t._v("\n")])])]),s("p",[t._v("通常用法：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnumTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AUTHOR1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小明"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AUTHOR2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小白"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnumTest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getValue")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("enum")]),t._v("可以在"),s("code",[t._v("switch")]),t._v("语句内使用，它们是一种绝佳的组合。")])])}),[],!1,null,null,null);a.default=e.exports}}]);