(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{237:function(t,a,s){"use strict";s.r(a);var e=s(19),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("本章介绍如何编写正确的异常处理程序，并展示当方法出问题的时候，如何产生自定义的异常。")]),t._v(" "),s("img",{attrs:{src:t.$withBase("/backend/java/throwable.jpg")}}),t._v(" "),s("h2",{attrs:{id:"_12-1-概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-概念"}},[t._v("#")]),t._v(" 12.1 概念")]),t._v(" "),s("p",[t._v("使用异常可以将问题提交给上一级，还可以降低错误处理代码的复杂度，将“正常的执行过程”和“出了问题怎么办”的代码相分离，使代码的阅读，编写和调试工作更加井井有条。")]),t._v(" "),s("h2",{attrs:{id:"_12-2-异常参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-异常参数"}},[t._v("#")]),t._v(" 12.2 异常参数")]),t._v(" "),s("p",[t._v("用"),s("code",[t._v("new")]),t._v("在堆上创建异常对象，所有标准异常类都有两个构造器：默认构造器；接收字符串为参数，以便把相关信息放入异常对象的构造器。\n"),s("code",[t._v('throw new NullPointerException(" t = null ");')])]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("new")]),t._v("创建了异常对象后，对象的引用将传给"),s("code",[t._v("throw")]),t._v("。返回的异常对象其类型与方法的返回类型不同，从效果上看，它就像是从方法返回的。可以简单的把异常处理看成一种不同的返回机制。")]),t._v(" "),s("p",[s("code",[t._v("Throwable")]),t._v("对象是异常类型的根类。通常对于不同类型的错误，要抛出相应的异常。错误信息可以保存在异常对象内部或者用异常类的名称来暗示。")]),t._v(" "),s("h2",{attrs:{id:"_12-3-捕获异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-捕获异常"}},[t._v("#")]),t._v(" 12.3 捕获异常")]),t._v(" "),s("h3",{attrs:{id:"_12-3-1-try"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-1-try"}},[t._v("#")]),t._v(" 12.3.1 try")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("try")]),t._v("块里尝试各种可能产生异常的方法调用。")]),t._v(" "),s("h3",{attrs:{id:"_12-3-2-异常处理程序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-2-异常处理程序"}},[t._v("#")]),t._v(" 12.3.2 异常处理程序")]),t._v(" "),s("p",[t._v("抛出的异常必须在某处得到处理。这个“地点”就是"),s("strong",[t._v("异常处理程序")]),t._v("，紧跟在"),s("code",[t._v("try")]),t._v("块之后，以关键字"),s("code",[t._v("catch")]),t._v("表示：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//可能会产生异常的代码")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception1")]),t._v(" e1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理Exception1异常的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception2")]),t._v(" e2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//处理Exception2异常的方法")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("异常处理程序必须紧跟在"),s("code",[t._v("try")]),t._v("块之后。当异常被抛出时，异常处理机制将负责搜寻参数与异常类型相匹配的第一个处理程序。然后进入"),s("code",[t._v("catch")]),t._v("子句执行，此时认为异常得到了处理。"),s("code",[t._v("catch")]),t._v("子句结束，处理程序的查找过程结束。与"),s("code",[t._v("switch")]),t._v("不同，只有匹配到"),s("code",[t._v("catch")]),t._v("会被执行，而"),s("code",[t._v("switch")]),t._v("没有"),s("code",[t._v("break")]),t._v("会执行后续的"),s("code",[t._v("case")]),t._v("子句。")]),t._v(" "),s("h2",{attrs:{id:"_12-4-创建自定义异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-创建自定义异常"}},[t._v("#")]),t._v(" 12.4 创建自定义异常")]),t._v(" "),s("p",[t._v("要自定义异常，必须从已有的异常类继承，最简单的方法就是编译器为你产生默认构造器。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("本例中没有Exception(String)的构造器，这种构造器也不实用，一般用类型来表现异常就够了。")]),t._v(" "),s("p",[t._v("异常处理程序中，一般调用在"),s("code",[t._v("Throwable")]),t._v("类中声明的"),s("code",[t._v("printStackTrace()")]),t._v("方法。信息被输出到标准错误流"),s("code",[t._v("System.err")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_12-4-1-异常与记录日志"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-4-1-异常与记录日志"}},[t._v("#")]),t._v(" 12.4.1 异常与记录日志")]),t._v(" "),s("p",[t._v("一般异常输出记录到日志中。jdk中"),s("code",[t._v("java.util.logging")]),t._v("工具（jul）就可以完成。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoggingException")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),t._v(" logger "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Logger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getLogger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LoggingException"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("LoggingException")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWriter")]),t._v(" trace "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrintWriter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        logger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("severe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("trace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("静态的"),s("code",[t._v("Logger.getLogger()")]),t._v("方法创建了一个"),s("code",[t._v("String")]),t._v("参数相关联的"),s("code",[t._v("Logger")]),t._v("对象，这个"),s("code",[t._v("Logger")]),t._v("对象会将其输出发送到"),s("code",[t._v("System.err")]),t._v("。"),s("code",[t._v("printStackTrace()")]),t._v("将异常输出到"),s("code",[t._v("trace")]),t._v("中，使用"),s("code",[t._v("severe()")]),t._v("方法将"),s("code",[t._v("trace")]),t._v("记录到日志。")])]),t._v(" "),s("p",[t._v("我们这里将日志的基础设置都构建在异常本身，日志记录不需要调用者的干预就可以运行。但是如果要捕获其它人的异常，就必须在"),s("code",[t._v("catch")]),t._v("中生成日志消息。")]),t._v(" "),s("p",[t._v("还可以进一步自定义异常，例如覆盖"),s("code",[t._v("Trowable.getMessage()")]),t._v("方法，以产生更详细的信息，有点类似于"),s("code",[t._v("toString()")]),t._v("方法。")]),t._v(" "),s("p",[t._v("异常也是对象的一种，所以可以通过修改异常类，得到更强的功能。但是客户端程序员可能仅仅查看一下抛出的异常类型，其它的就不管了（Jdk\n中的异常也都是这么用的），所以对异常不需要过度设计，也许根本用不上。")]),t._v(" "),s("h2",{attrs:{id:"_12-5-异常说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-5-异常说明"}},[t._v("#")]),t._v(" 12.5 异常说明")]),t._v(" "),s("p",[t._v("使用"),s("code",[t._v("throws")]),t._v("关键字告诉客户端程序员可能会抛出的异常类型。从"),s("code",[t._v("RuntimeException")]),t._v("继承的异常，它们可以在没有异常说明的情况下被抛出，而从非"),s("code",[t._v("RuntimeException")]),t._v("继承的异常，在方法上做了异常声明之后，在调用处手动捕获。")]),t._v(" "),s("p",[t._v("如果方法的代码里产生了异常却没有进行处理，编译器会提醒你：要么处理这个异常，要么就在异常说明中声明这个方法将产生异常。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("异常说明仅是说明这个方法可能会产生这个异常，并不是一定会产生。")])]),t._v(" "),s("h2",{attrs:{id:"_12-6-捕获所有异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-捕获所有异常"}},[t._v("#")]),t._v(" 12.6 捕获所有异常")]),t._v(" "),s("p",[t._v("可以写一个"),s("code",[t._v("catch")]),t._v("用来捕获所有可能产生的异常。")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("最好把它放在处理程序列表的末尾，防止它在其它处理程序之前把异常捕获了。")]),t._v(" "),s("p",[s("code",[t._v("Exception")]),t._v("是所有异常的基类，它从它的基类"),s("code",[t._v("Throwable")]),t._v("继承了方法。\n"),s("code",[t._v("String getMessage()")]),t._v(","),s("code",[t._v("String getLocalizedMessage()")]),t._v("用来获取详细信息，或用本地语言表示的详细信息。"),s("code",[t._v("String toString()")]),t._v("返回对"),s("code",[t._v("Throwable")]),t._v("的简单表述，要是有详细信息，也会把它包含在内。\n"),s("code",[t._v("void printStackTrace()")]),t._v(","),s("code",[t._v("void printStackTrace(PrintStream)")]),t._v(","),s("code",[t._v("void printStackTrace(java.io.PrintWriter)")]),t._v("打印"),s("code",[t._v("Throwable")]),t._v("和"),s("code",[t._v("Throwable")]),t._v("的调用"),s("strong",[t._v("栈轨迹")]),t._v("。")]),t._v(" "),s("p",[t._v("调用栈显式了“把你带到异常抛出地点”的方法调用序列。其中第一个版本输出到标准错误，后两个版本允许选择要输出的流。")]),t._v(" "),s("h3",{attrs:{id:"_12-6-1-栈轨迹"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-1-栈轨迹"}},[t._v("#")]),t._v(" 12.6.1 栈轨迹")]),t._v(" "),s("p",[s("code",[t._v("printStackTrace()")]),t._v("返回一个由栈轨迹中的元素构成的数组。")]),t._v(" "),s("p",[t._v("栈顶元素是调用序列中的最后一个方法调用（这个"),s("code",[t._v("Throwable")]),t._v("被创建和抛出之处）。栈底元素是调用序列中的第一个方法调用。")]),t._v(" "),s("h3",{attrs:{id:"_12-6-2-重新抛出异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-6-2-重新抛出异常"}},[t._v("#")]),t._v(" 12.6.2 重新抛出异常")]),t._v(" "),s("p",[t._v("可以在"),s("code",[t._v("catch")]),t._v("中重新"),s("code",[t._v("throw")]),t._v("异常，将异常抛给上一级环境中的异常处理程序。")]),t._v(" "),s("h2",{attrs:{id:"_12-7-java-标准异常"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-java-标准异常"}},[t._v("#")]),t._v(" 12.7 Java 标准异常")]),t._v(" "),s("p",[s("code",[t._v("Throwable")]),t._v("分为两种类型："),s("code",[t._v("Error")]),t._v("和"),s("code",[t._v("Exception")]),t._v("。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Error")]),t._v("用来表示编译时和系统错误，除特殊情况一般不需要关心")]),t._v(" "),s("li",[s("code",[t._v("Exception")]),t._v("是可以被抛出的基本类型。")])]),t._v(" "),s("h3",{attrs:{id:"_12-7-1-特例：runtimeexception"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-7-1-特例：runtimeexception"}},[t._v("#")]),t._v(" 12.7.1 特例：RuntimeException")]),t._v(" "),s("p",[t._v("它被称为"),s("strong",[t._v("运行时异常")]),t._v("，在运行时会自动被Java虚拟机抛出，所以不用在异常说明中把这类列出来。")]),t._v(" "),s("p",[s("code",[t._v("RuntimeException")]),t._v("在代码中通常不用被手动捕获（当然也可以手动捕获它），但是其它类型的异常必须由我们强制实施。")]),t._v(" "),s("p",[s("code",[t._v("RuntimeException")]),t._v("代表的是编程错误：")]),t._v(" "),s("ul",[s("li",[t._v("无法预料的错误。比如你传递了"),s("code",[t._v("null")]),t._v("引用。")]),t._v(" "),s("li",[t._v("应该在代码中检查的错误，比如数组越界。")])]),t._v(" "),s("h2",{attrs:{id:"_12-8-finally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-finally"}},[t._v("#")]),t._v(" 12.8 finally")]),t._v(" "),s("p",[s("code",[t._v("try")]),t._v("块中，无论异常是否被抛出，"),s("code",[t._v("finally")]),t._v("子句总能被执行。")]),t._v(" "),s("h3",{attrs:{id:"_12-8-1-finally的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-1-finally的作用"}},[t._v("#")]),t._v(" 12.8.1 finally的作用")]),t._v(" "),s("p",[s("code",[t._v("finally")]),t._v("用来清理的资源包括：已经打开的文件或网络连接，在屏幕上画的图形，甚至是外部世界的某个开关。")]),t._v(" "),s("h3",{attrs:{id:"_12-8-2-return与finally"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-2-return与finally"}},[t._v("#")]),t._v(" 12.8.2 return与finally")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("try")]),t._v("中使用"),s("code",[t._v("return")]),t._v("，也会执行"),s("code",[t._v("finally")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"_12-8-3-异常丢失"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-8-3-异常丢失"}},[t._v("#")]),t._v(" 12.8.3 异常丢失")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("finally")]),t._v("中抛出异常会丢失原有的异常，在"),s("code",[t._v("finally")]),t._v("中使用"),s("code",[t._v("return")]),t._v("也会丢失抛出的异常。")]),t._v(" "),s("h2",{attrs:{id:"_12-9-异常的限制（暂不理解）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-9-异常的限制（暂不理解）"}},[t._v("#")]),t._v(" 12.9 异常的限制（暂不理解）")]),t._v(" "),s("p",[t._v("子类构造器的异常说明必须包含父类构造器的异常说明。")]),t._v(" "),s("p",[t._v("父类方法没有异常声明，子类对其覆盖的方法也不能有异常声明。父类方法有异常声明，子类覆盖方法可以不抛出任何异常。")]),t._v(" "),s("p",[t._v("异常说明本身不属于方法类型的一部分，方法类型是由方法的名字与参数的类型组成的。因此，不能基于异常说明来重载方法。一个出现在基类方法异常说明中的异常，不一定会出现在派生类方法的异常说明。")]),t._v(" "),s("p",[t._v("这与继承的规则不同。")]),t._v(" "),s("p",[t._v("在继承中，基类的方法必须出现在派生类里。在继承和覆盖的过程中，某个特定方法的“异常说明的接口”不是变大了而是变小了。——这恰好和类接口在继承时的情形相反。")]),t._v(" "),s("h2",{attrs:{id:"_12-10-构造器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-10-构造器"}},[t._v("#")]),t._v(" 12.10 构造器")]),t._v(" "),s("p",[t._v("构造器抛出异常时，需要自己注意如何清理。")]),t._v(" "),s("h2",{attrs:{id:"_12-11-异常匹配"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-11-异常匹配"}},[t._v("#")]),t._v(" 12.11 异常匹配")]),t._v(" "),s("p",[t._v("抛出异常时，异常处理系统会按照书写顺序找出最近的处理程序。")]),t._v(" "),s("h2",{attrs:{id:"_12-12-异常处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-12-异常处理"}},[t._v("#")]),t._v(" 12.12 异常处理")]),t._v(" "),s("p",[t._v("异常说明可能有两种意思：一个是“我的代码会产生这种异常，这由你来处理”。另一个是“我的代码忽略了这些异常，这由你来处理”。")]),t._v(" "),s("p",[t._v("如果不知道怎么处理这个异常，可以将异常暂时转换成"),s("code",[t._v("RuntimeException")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_12-14-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-14-总结"}},[t._v("#")]),t._v(" 12.14 总结")]),t._v(" "),s("p",[t._v("错误报告是异常的精髓所在。")]),t._v(" "),s("p",[t._v("异常将常规代码与特殊情况产生的错误处理代码分离，使你的代码更清晰。")])])}),[],!1,null,null,null);a.default=_.exports}}]);