(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{245:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("长连接的连接资源随着连接数量的增多，必会造成资源耗尽，客户端轮询会给服务器造成巨大的压力。")]),t._v(" "),a("p",[t._v("而 websocket 是在物理层非网络层建立一条客户端至服务器的长连接。以此来保证服务器向客户端的即时推送，既不耗费线程资源，又不会不断向服务器轮询请求。")]),t._v(" "),a("h2",{attrs:{id:"通信过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通信过程"}},[t._v("#")]),t._v(" 通信过程")]),t._v(" "),a("ol",[a("li",[t._v("客户端发起 http 请求，附加头信息为：“Upgrade Websocket”")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("收到客户端信息：GET /Get HTTP/1.1\nUpgrade: websocket\nConnection: Upgrade\nHost: 127.0.0.1:10000\nOrigin: http://127.0.0.1:8020\nPragma: no-cache\nCache-Control: no-cache\nSec-WebSocket-Key: tSYYnx6EFK/hevZK63bLsQ==\nSec-WebSocket-Version: 13\nSec-WebSocket-Extensions: permessage-deflate; client_max_window_bits, x-webkit-deflate-frame\nUser-Agent: Morilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.138 Safari/537.36\n")])])]),a("ul",[a("li",[a("code",[t._v("Upgrade")]),t._v("表示的意思是“客户端准备使用 websocket 协议进行通信，服务端如果支持的话，咱就就换 websocket 协议吧”。")]),t._v(" "),a("li",[a("code",[t._v("sec-websocket-version")]),t._v("是指浏览器支持的 websocket版本号，需注意这里不会出现 9-12 的版本号，因为 websocket 协议规定 9-12 是保留字段。")]),t._v(" "),a("li",[a("code",[t._v("sec-websocket-key")]),t._v("是一种验证服务端是不是支持 websocket 的验证算法。与 Response 中的 sec-websocket-accept 是对应的。")]),t._v(" "),a("li",[a("code",[t._v("sec-websocket-accept")]),t._v("与"),a("code",[t._v("sec-websocket-key")]),t._v("的对应算法是"),a("code",[t._v("sec-websocket-accept = base64(hsal(sec-websocket-key + 258EAFA5-E914-47DA-95CA-C5AB0DC85B11))")]),t._v(",如果返回的"),a("code",[t._v("sec-websocket-accept")]),t._v("不对，在 chrome 下会出现 "),a("code",[t._v("Sec-WebSocket-Accept dismatch")]),t._v("的错误。")]),t._v(" "),a("li",[a("code",[t._v("HTTP Status")]),t._v(": Response 返回的是 101 ，代表服务端说：“我们双方就按照 websocket 协议来进行数据传输吧！”")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("服务端解析，并返回握手信息，从而建立连接。")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("回复客户端握手信息： HTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: F/HQ8pdrwCHDUDYHjWp7C6EcxO8=\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("传输数据（双向）")])]),t._v(" "),a("li",[a("p",[t._v("客户端或服务端主动断开连接。客户端主动断开：客户端发起 http 请求，请求断开连接，服务端收到消息后断开 WebSocket 连接；服务端主动断开：直接断开 WebSocket 连接，客户端的 API 会立刻得知。")])])]),t._v(" "),a("h2",{attrs:{id:"客户端-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端-api"}},[t._v("#")]),t._v(" 客户端 api")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//建立连接")]),t._v("\nwebsocket "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws://"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ws"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//发送消息")]),t._v("\nwebsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stringify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听服务端推送的消息")]),t._v("\nwebsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onmessage")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//客户端主动提出分手")]),t._v("\nwebsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听服务端提出的分手")]),t._v("\nwebsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclose")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//监听异常")]),t._v("\nwebsocket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onerror")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"服务端的-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端的-api"}},[t._v("#")]),t._v(" 服务端的 API")]),t._v(" "),a("p",[t._v("Spring WebSocket")])])}),[],!1,null,null,null);s.default=n.exports}}]);