(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{298:function(s,t,e){"use strict";e.r(t);var a=e(19),r=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[s._v("#")]),s._v(" 介绍")]),s._v(" "),e("p",[e("code",[s._v("Docker Compose")]),s._v(" 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应用。")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 "),e("code",[s._v("OpenStack")]),s._v(" 中的 "),e("code",[s._v("Heat")]),s._v(" 十分类似。")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 定位是 "),e("strong",[s._v("「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」")]),s._v("，其前身是开源项目 Fig。")]),s._v(" "),e("p",[s._v("我们知道使用一个 "),e("code",[s._v("Dockerfile")]),s._v(" 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 恰好满足了这样的需求。它允许用户通过一个单独的 "),e("code",[s._v("docker-compose.yml")]),s._v(" 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 中有两个重要的概念：")]),s._v(" "),e("ul",[e("li",[s._v("服务 ("),e("code",[s._v("service")]),s._v(")：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。")]),s._v(" "),e("li",[s._v("项目 ("),e("code",[s._v("project")]),s._v(")：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。")])]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 项目由 "),e("code",[s._v("Python")]),s._v(" 编写，实现上调用了 "),e("code",[s._v("Docker")]),s._v(" 服务提供的 API 来对容器进行管理。"),e("strong",[s._v("因此，只要所操作的平台支持 Docker API，就可以在其上利用 Compose 来进行编排管理。")])]),s._v(" "),e("h2",{attrs:{id:"docker-compose-安装与卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose-安装与卸载"}},[s._v("#")]),s._v(" Docker Compose 安装与卸载")]),s._v(" "),e("h3",{attrs:{id:"关于版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于版本"}},[s._v("#")]),s._v(" 关于版本")]),s._v(" "),e("p",[s._v("配置：")]),s._v(" "),e("ul",[e("li",[s._v("阿里云1核2G内存1M带宽")]),s._v(" "),e("li",[s._v("Ubuntu版本为 18.04（64位）")])]),s._v(" "),e("h3",{attrs:{id:"ubuntu-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-安装"}},[s._v("#")]),s._v(" Ubuntu 安装")]),s._v(" "),e("p",[e("strong",[s._v("二进制包")])]),s._v(" "),e("ol",[e("li",[s._v("从 "),e("a",{attrs:{href:"https://github.com/docker/compose/releases",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方 GitHub Release"),e("OutboundLink")],1),s._v(" 处直接下载编译好的二进制文件即可。\n例如，最新版本为 "),e("code",[s._v("1.26.0-rc2")])])]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://github.com/docker/compose/releases/download/1.26.0-rc2/docker-compose-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("将下载路径中的 "),e("code",[s._v("1.26.0-rc2")]),s._v(" 修改为你需要的版本。\n这里下载到"),e("code",[s._v("/usr/local/bin/")]),s._v("，并重命名为 "),e("code",[s._v("docker-compose")])])]),s._v(" "),e("ol",{attrs:{start:"2"}},[e("li",[e("strong",[s._v("下载完成后，赋予权限")])])]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])])]),e("h3",{attrs:{id:"ubuntu-卸载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ubuntu-卸载"}},[s._v("#")]),s._v(" Ubuntu 卸载")]),s._v(" "),e("p",[s._v("如果是二进制包方式安装的，删除二进制文件即可。")]),s._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" /usr/local/bin/docker-compose\n")])])]),e("h2",{attrs:{id:"基本模板"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本模板"}},[s._v("#")]),s._v(" 基本模板")]),s._v(" "),e("div",{staticClass:"language-yml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tomcat")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" always\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" examples/web\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"80:80"')]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/data"')]),s._v("\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("version")]),s._v(": 当前"),e("strong",[s._v("docker-compose")]),s._v("的版本")]),s._v(" "),e("li",[e("code",[s._v("services")]),s._v(": 所有的服务")]),s._v(" "),e("li",[e("code",[s._v("tomcat")]),s._v(" : 第一个服务")]),s._v(" "),e("li",[e("code",[s._v("restart")]),s._v(" : 重启")]),s._v(" "),e("li",[e("code",[s._v("image")]),s._v(" : 镜像")]),s._v(" "),e("li",[e("code",[s._v("ports")]),s._v(" : 端口映射")]),s._v(" "),e("li",[e("code",[s._v("volumes")]),s._v(" : 指定数据卷")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);